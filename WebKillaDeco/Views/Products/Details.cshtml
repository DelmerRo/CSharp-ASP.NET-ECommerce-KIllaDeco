@model WebKillaDeco.Models.Product
@using WebKillaDeco.Helpers
@{
    ViewData["Title"] = "Details";
}

<!-- Product Details Area Start -->
<div class="single-product-area section-padding-0 clearfix">
    <div class="container-fluid">

        <!-- Breadcrumb -->
        <div class="row">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mt-50">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Products")">@Alias.Products</a></li>
                        <li class="breadcrumb-item"><a href="#">@Model.SubCategories.Category.Name</a></li>
                        <li class="breadcrumb-item"><a href="#">@Model.SubCategories.Name</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                    </ol>
                </nav>
            </div>
        </div>

        <!-- Product Details -->
        <div class="row">
            <!-- Product Images -->
            <div class="col-12 col-lg-7">
                <div class="single_product_thumb">
                    <div id="product_details_slider" class="carousel slide" data-ride="carousel">
                        <ol class="carousel-indicators">
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <li class="active" data-target="#product_details_slider" data-slide-to="0" style="background-image: url('@Url.Content(Model.ImageUrl)');"></li>
                            }
                            @if (!string.IsNullOrEmpty(Model.ImageUrl1))
                            {
                                <li data-target="#product_details_slider" data-slide-to="1" style="background-image: url('@Url.Content(Model.ImageUrl1)');"></li>
                            }
                            @if (!string.IsNullOrEmpty(Model.ImageUrl2))
                            {
                                <li data-target="#product_details_slider" data-slide-to="2" style="background-image: url('@Url.Content(Model.ImageUrl2)');"></li>
                            }
                            @if (!string.IsNullOrEmpty(Model.ImageUrl3))
                            {
                                <li data-target="#product_details_slider" data-slide-to="3" style="background-image: url('@Url.Content(Model.ImageUrl3)');"></li>
                            }
                        </ol>
                        <div class="carousel-inner">
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <div class="carousel-item active">
                                    <a href="@Url.Content(Model.ImageUrl)" data-lightbox="product-gallery">
                                        <img class="d-block w-100" src="@Url.Content(Model.ImageUrl)" alt="First slide" style="max-width: 1920px; max-height: 1080px;">
                                    </a>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.ImageUrl1))
                            {
                                <div class="carousel-item">
                                    <a href="@Url.Content(Model.ImageUrl1)" data-lightbox="product-gallery">
                                        <img class="d-block w-100" src="@Url.Content(Model.ImageUrl1)" alt="Second slide" style="max-width: 1920px; max-height: 1080px;">
                                    </a>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.ImageUrl2))
                            {
                                <div class="carousel-item">
                                    <a href="@Url.Content(Model.ImageUrl2)" data-lightbox="product-gallery">
                                        <img class="d-block w-100" src="@Url.Content(Model.ImageUrl2)" alt="Third slide" style="max-width: 1920px; max-height: 1080px;">
                                    </a>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.ImageUrl3))
                            {
                                <div class="carousel-item">
                                    <a href="@Url.Content(Model.ImageUrl3)" data-lightbox="product-gallery">
                                        <img class="d-block w-100" src="@Url.Content(Model.ImageUrl3)" alt="Fourth slide" style="max-width: 1920px; max-height: 1080px;">
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product Description -->
            <div class="col-12 col-lg-5">
                <div class="single_product_desc">
                    <!-- Product Meta Data -->
                    <div class="product-meta-data">
                        <div class="line"></div>

                        @if (Model.Discount != 0 && Model.Discount < Model.CurrentPrice)
                        {
                            decimal discountPercent = Model.Discount * 100;
                            decimal price = Model.CurrentPrice;
                            decimal discountedPrice = price - (price * discountPercent / 100);
                            <p class="product-price">
                                <del class="original-price">$@price.ToString("0.##")</del>
                                <span style="color: #9ACD32; font-size: smaller;">
                                    @discountPercent.ToString("0")% OFF<br />
                                </span>
                                <span class="discount-info">$@discountedPrice.ToString("0.##")</span>
                            </p>

                        }
                        else
                        {
                            <p class="product-price">$@Model.CurrentPrice.ToString("0.##")</p>
                        }

                        <h5>@Model.Name</h5>

                        <!-- Ratings & Review -->
                        <div class="ratings-review mb-15 d-flex align-items-center justify-content-between">
                            @Html.Partial("_Rating", Model)
                            <div class="review">
                                <a href="#" class="review-link">Ver Reseñas</a>
                                <div id="reviewContent" style="display: none;">
                                    @Html.Partial("_ReviewContent", Model)
                                </div>
                            </div>

                        </div>

                        <!-- Availability -->
                        <p class="availability">
                            <i class="fa fa-circle" style="color: green;"></i>
                            @if (Model.AvailableStock > 0)
                            {
                                <span>@Alias.InStock</span>
                            }
                            else
                            {
                                <span>@Alias.OutOfStock</span>
                            }
                        </p>

                    </div>

                    <!-- Short Overview -->
                    <div class="short_overview my-5">
                        <small style="line-height: 1.1;">@Model.Description</small>
                    </div>


                    <!-- Add to Cart Form -->
                    <form class="cart clearfix" method="post" action="@Url.Action("AddToCart", "Cart")">
                        <div class="cart-btn d-flex mb-50">
                            <p>@Alias.Quantity:</p>
                            <div class="quantity">
                                <span class="qty-minus" onclick="var effect = document.getElementById('qty'); var qty = effect.value; if( !isNaN( qty ) &amp;&amp; qty > 1 ) effect.value--;return false;">
                                    <i class="fa fa-caret-down" aria-hidden="true"></i>
                                </span>
                                <input type="number" class="qty-text" id="qty" step="1" min="1" max="@Model.AvailableStock" name="quantity" value="1">
                                <span class="qty-plus" onclick="var effect = document.getElementById('qty'); var qty = effect.value; if( !isNaN( qty )) effect.value++;return false;">
                                    <i class="fa fa-caret-up" aria-hidden="true"></i>
                                </span>
                            </div>
                        </div>
                        <button type="submit" name="addtocart" value="@Model.ProductId" class="btn amado-btn">Add to cart</button>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row mt-5">
    <div class="col-12">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead class="thead-white">
                    <tr>
                        <th colspan="2" class="text-center" style="background-color: #FBB808; color: white; padding: 10px;">
                            Características del Producto
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.SubCategories.Category.Name):</strong></td>
                        <td> @Html.DisplayFor(model => model.SubCategories.Category.Name)</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.SubCategories.Name):</strong></td>
                        <td> @Html.DisplayFor(model => model.SubCategories.Name)</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.Brand):</strong></td>
                        <td> @Html.DisplayFor(model => model.Brand)</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.Weight):</strong></td>
                        <td> @Html.DisplayFor(model => model.Weight) kg</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.Width):</strong></td>
                        <td> @Html.DisplayFor(model => model.Weight) cm</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.Height):</strong></td>
                        <td> @Html.DisplayFor(model => model.Height) cm</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.Depth):</strong></td>
                        <td> @Html.DisplayFor(model => model.Depth) cm</td>
                    </tr>
                    <tr>
                        <td><strong>@Html.DisplayNameFor(model => model.Color):</strong></td>
                        <td>
                            @if (!string.IsNullOrEmpty(Model.Color) && Model.Color.StartsWith("#"))
                            {
                                <span style="background-color:@Model.Color; display: inline-block; width: 30px; height: 30px; border-radius: 50%; border: 1px solid;"></span>
                            }
                            else
                            {
                                <span>No color specified</span>
                            }
                        </td>
                    </tr>
                    <!-- Agrega más características según sea necesario -->
                </tbody>
            </table>
        </div>
    </div>
</div>
<hr />
<div class="reviews-container mt-5">
    <h3>Preguntas y Respuestas</h3>
    @if (Model.Questions.Any())
    {
        @foreach (var question in Model.Questions)
        {
            <div class="question-item p-3 bg-light rounded mb-3">
                <div class="review-header d-flex align-items-center justify-content-between border-bottom pb-2 mb-2">
                    <div class="date text-muted">
                        <p class="mb-0"><i class="fa fa-calendar"></i> @question.publicationDate.ToShortDateString()</p>
                    </div>
                </div>
                <div class="review-body">
                    <div class="comment-user-info">
                        <div class="comment mb-2">
                            <p class="mb-1"><i class="fa fa-question-circle"></i> @question.description</p>
                            <p class="ml-4 mb-0"><i class="fa fa-reply"></i> @question.Answer.description</p>
                        </div>
                        <div class="user-info text-right text-muted mt-2">
                            <small><i class="fa fa-user"></i> @(question.Client != null ? question.Client.Name : "Cliente desconocido")</small>
                        </div>
                    </div>
                </div>
            </div>
            <hr />
        }
    }
    else
    {
        <p>Aún no existen preguntas</p>
    }

    <h4>Agregar una nueva pregunta</h4>
    <form asp-action="CreateQuestion" method="post">
        <input type="hidden" name="ProductId" value="@Model.ProductId" />
        <div class="form-group">
            <label for="description">Pregunta</label>
            <textarea class="form-control" name="description" id="description" rows="3" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Enviar</button>
    </form>
</div>


<!-- Product Details Area End -->
<!-- Lightbox2 JS -->
@section Scripts {
    <script>
        $(document).ready(function () {
            $('.review-link').on('click', function (e) {
                e.preventDefault();
                Swal.fire({
                    title: 'Reseñas de @Model.Name',
                    html: $('#reviewContent').html(), // Puedes ajustar esto para cargar el contenido dinámicamente
                    showCloseButton: true,
                    focusConfirm: false,
                    confirmButtonText: 'Cerrar'
                });
            });
        });
    </script>
}
